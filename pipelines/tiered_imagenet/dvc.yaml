stages:
  compute_distances:
    foreach:
      - train
      - test
    do:
      wdir: ../..
      cmd: python -m src.compute_semantic_distances
        --split ${item}
        --specs-dir ${specs_dir}
        --output-dir ${distances_dir}
        &> ${logs_dir}/compute_distances_${item}.out
      deps:
        - ${specs_dir}/${item}.json
        - ${specs_dir}/wordnet.is_a.txt
        - src/compute_semantic_distances.py
      outs:
        - ${logs_dir}/compute_distances_${item}.out
        - ${distances_dir}/${item}.csv

  create_testbed:
    foreach: ${testbed.n_shot}
    do:
      wdir: ../..
      cmd: python -m src.create_testbed
        --n-tasks ${testbed.n_tasks}
        --n-way ${testbed.n_way}
        --n-query ${testbed.n_query}
        --n-shot ${item}
        --out-file ${testbeds_dir}/testbed_${item}_shot.csv
        &> ${logs_dir}/create_testbed_${item}.out
      deps:
        - ${distances_dir}/test.csv
        - ${specs_dir}/test.json
        - src/create_testbed.py
      outs:
        - ${testbeds_dir}/testbed_${item}_shot.csv
        - ${testbeds_dir}/testbed_${item}_shot_pv.png
        - ${testbeds_dir}/testbed_${item}_shot_occ.png
        - ${logs_dir}/create_testbed_${item}.out

  create_uniform_testbed:
    foreach: ${testbed.n_shot}
    do:
      wdir: ../..
      cmd: python -m src.create_uniform_testbed
        --n-tasks ${testbed.n_tasks}
        --n-way ${testbed.n_way}
        --n-query ${testbed.n_query}
        --n-shot ${item}
        --out-file ${testbeds_dir}/testbed_uniform_${item}_shot.csv
        &> ${logs_dir}/create_uniform_testbed_${item}.out
      deps:
        - ${distances_dir}/test.csv
        - ${specs_dir}/test.json
        - src/create_uniform_testbed.py
      outs:
        - ${testbeds_dir}/testbed_uniform_${item}_shot.csv
        - ${testbeds_dir}/testbed_uniform_${item}_shot_pv.png
        - ${testbeds_dir}/testbed_uniform_${item}_shot_occ.png
        - ${logs_dir}/create_uniform_testbed_${item}.out

  evaluate:
    foreach: ${testbeds_grid}
    do:
      wdir: ../..
      cmd: python -m src.evaluate
        --specs-dir ${specs_dir}
        --testbed ${testbeds_dir}/testbed_${item}.csv
        --method ${model.method}
        --dataset tiered_imagenet
        --trained-model ${model.weights}
        --output-dir ${metrics_dir}
        --device ${device}
        &> ${logs_dir}/evaluate_${item}.out
      deps:
        - ${model.weights}
        - ${testbeds_dir}/testbed_${item}.csv
        - ${specs_dir}/test.json
        - src/evaluate.py
      outs:
        - ${metrics_dir}/raw_results_${item}.csv
        - ${logs_dir}/evaluate_${item}.out

  compute_metrics:
    foreach: ${testbeds_grid}
    do:
      wdir: ../..
      cmd: python -m src.compute_metrics
        --testbed-spec ${item}
        &> ${logs_dir}/compute_metrics_${item}.out
      deps:
        - ${testbeds_dir}/testbed_${item}.csv
        - ${metrics_dir}/raw_results_${item}.csv
        - src/compute_metrics.py
      outs:
        - ${logs_dir}/compute_metrics_${item}.out
      metrics:
        - ${metrics_dir}/evaluation_metrics_${item}.json
      plots:
        - ${metrics_dir}/task_performances_${item}.csv:
            x: variance
            y: accuracy
            title: accuracy depending on task's pseudo-variance
            template: smooth
